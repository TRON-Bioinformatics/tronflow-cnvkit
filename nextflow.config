/*
 * -------------------------------------------------
 *  TRON-Bioinformatics/tronflow-copy-number-calling Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 */

params.cpus = 1
params.memory = '4g'
params.help= false
params.input_files = false
params.reference = false
params.intervals = false
params.output = 'output'
params.VROOM_CONNECTION_SIZE = "500000000"
params.tool = false

process {
    withName: CNVKIT_BATCH {
        publishDir = [
            path: { "${params.output}/cnvkit" },
            mode: 'copy'
        ]
        cpus = "${params.cpus}"
        memory = "${params.memory}"
    }
    withName: SEQUENZAUTILS_BAM2SEQZ {
        publishDir = [
            path: { "${params.output}/sequenza" },
            mode: 'copy'
        ]
        cpus = "${params.cpus}"
        memory = "${params.memory}"
    }
    withName: SEQUENZAUTILS_SEQZBINNING {
        publishDir = [
            path: { "${params.output}/sequenza" },
            mode: 'copy'
        ]
        cpus = "${params.cpus}"
        memory = "${params.memory}"
    }
    withName: SEQUENZA_R {
        publishDir = [
            path: { "${params.output}/sequenza" },
            mode: 'copy'
        ]
        cpus = "${params.cpus}"
        memory = "${params.memory}"
    }
}

profiles {
  conda {
    conda.enabled = true
    params.enable_conda = true
    conda.createTimeout = "120 min"
  }
  mamba {
    conda.enabled = true
    params.enable_conda = true
    conda.createTimeout = "120 min"
    conda.useMamba = true
  }
  debug { process.beforeScript = 'echo $HOSTNAME' }
  test {
    params.cpus = 1
    params.memory = "3g"
    timeline.enabled = false
    report.enabled = false
    trace.enabled = false
    dag.enabled = false
  }
}

// Export this variable to prevent local Python libraries from conflicting with those in the container
env {
  PYTHONNOUSERSITE = 1
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// This cleans up the 'work' directory after the pipeline execution completed successfully
cleanup = false
//cleanup = true

VERSION = '0.2.2'
DOI = 'doi'

manifest {
  name = 'TRON-Bioinformatics/tronflow-copy-number-calling'
  author = 'Pablo Riesgo-Ferreiro, Jonas Ibn-Salem, Julian Thomas Mohr'
  homePage = 'https://gitlab.rlp.net/tron/tronflow-copy-number-calling'
  description = 'Nextflow pipeline for copy number calling using different tools'
  mainScript = 'main.nf'
  nextflowVersion = '>=19.10.0'
  version = VERSION
  doi = DOI
}
params.manifest = manifest

params.help_message = """
TronFlow Copy Number Calling v${VERSION}

Nextflow pipeline for copy number calling using different tools

Usage:
    nextflow run main.nf -profile conda --input_files input_files.tsv --reference reference.fasta --intervals target_region.bed

Input:
    * input_files: the path to a tab-separated values file containing in each row the sample name, tumor bam and normal bam
    The input file does not have header!
    Example input file:
    name1	tumor_bam1	normal_bam1
    name2	tumor_bam2	normal_bam2
    * reference: path to the FASTA genome reference
    * intervals: path to the BED file with the targeted region
    * tool: tool(s) to perform CN calling with (multiple entries possible, use ',' as delimiter) [ cnvkit, sequenza ]

Optional input:
    * output: the folder where to publish output (default: output)
    * VROOM_CONNECTION_SIZE: value for the environment variable VROOM_CONNECTION_SIZE which sometimes causes trouble with sequenza (default: 500000000)
    * cpus: the number of CPUs used by each job (default: 1)
    * memory: the ammount of memory used by each job (default: 4g)

Output:
    CNVkit:  
    * cnvkit/*.antitarget.bed : antitarget regions  
    * cnvkit/*.target.bed : target regions  
    * cnvkit/reference.cnn  
    * cnvkit/*.tumor.targetcoverage.cnn : binned tumor coverage in target region  
    * cnvkit/*.normal.targetcoverage.cnn : binned normal coverage in target region  
    * cnvkit/*.tumor.antitargetcoverage.cnn : binned tumor coverage in anti-target region  
    * cnvkit/*.normal.antitargetcoverage.cnn : binned normal coverage in ani-target region  
    * cnvkit/*.tumor.bintest.cns  
    * cnvkit/*.tumor.cnr : copy number ratios  
    * cnvkit/*.tumor.cns  
    * cnvkit/*.tumor.call.cns : copy number segments  
    Sequenza:  
    * sequenza/*.gz
    * sequenza/*.binned.gz  
    * sequenza/*_alternative_solutions.txt  
    * sequenza/*_confints_CP.txt  
    * sequenza/*_segments.txt  
    * sequenza/*_sequenza_log.txt : sequenza log file  
    * sequenza/*_alternative_fit.pdf  
    * sequenza/*_chromosome_depths.pdf  
    * sequenza/*_chromosome_view.pdf  
    * sequenza/*_CN_bars.pdf  
    * sequenza/*_CP_contours.pdf
    * sequenza/*_gc_plots.pdf  
    * sequenza/*_genome_view.pdf
    * sequenza/*_model_fit.pdf  
    * sequenza/*_sequenza_cp_table.RData  
    * sequenza/*_sequenza_extract.RData  
  """
